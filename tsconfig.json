{
  "compilerOptions": {
    // "incremental": true,                              /* Save .tsbuildinfo files to allow for incremental compilation of projects. */
    // "composite": true,                                /* Enable constraints that allow a TypeScript project to be used with project references. */
    // "tsBuildInfoFile": "./build/.tsbuildinfo",        /* Specify the path to .tsbuildinfo incremental compilation file. */
    // "disableSourceOfProjectReferenceRedirect": true,  /* Disable preferring source files instead of declaration files when referencing composite projects. */
    // "disableSolutionSearching": true,                 /* Opt a project out of multi-project reference checking when editing. */
    // "disableReferencedProjectLoad": true,             /* Reduce the number of projects loaded automatically by TypeScript. */

    /* Language and Environment */
    "target": "esnext",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "lib": ["esnext", "dom", "dom.iterable"],            /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    // "moduleDetection": "auto",                        /* Control what method is used to detect module-format JS files. */

    /* Modules */
    "module": "esnext",                                  /* Specify what module code is generated. */
    "moduleResolution": "bundler",                       /* Specify how TypeScript looks up a file from a given module specifier. */
    // "resolvePackageJsonExports": true,                /* Use the package.json 'exports' field when resolving package imports. */
    // "resolvePackageJsonImports": true,                /* Use the package.json 'imports' field when resolving imports. */
    "resolveJsonModule": true,                           /* Enable importing .json files. */
    "baseUrl": ".",
    "paths": { "shared/*": ["shared/*"], "config/*": ["config/*"] },

    // "importHelpers": true,                            /* Allow importing helper functions from tslib once per project, instead of including them per-file. */
    "downlevelIteration": true,                          /* Emit more compliant, but verbose and less performant JavaScript for iteration. */
    "emitBOM": false,                                    /* Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files. */
    "newLine": "lf",                                     /* Set the newline character for emitting files. */
    "stripInternal": true,                               /* Disable emitting declarations that have '@internal' in their JSDoc comments. */

    /* Interop Constraints */
    // "isolatedModules": true,                          /* Ensure that each file can be safely transpiled without relying on other imports. */
    // "isolatedDeclarations": true,                     /* Require sufficient annotation on exports so other tools can trivially generate declaration files. */
    "allowSyntheticDefaultImports": true,                /* Allow 'import x from y' when a module doesn't have a default export. */
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */

    /* Type Checking */
    "strict": true,                                      /* Enable all strict type-checking options. */

    /* Completeness */
    "skipLibCheck": true,                                /* Skip type checking all .d.ts files. */
  },
  "exclude": ["node_modules", "packages/*/node_modules"],
  "references": [{ "path": "./tsconfig.node.json" }]
}
